Variáveis de memória

Variáveis guardam valores temporários, destinados a execução do programa, na memória. Regras:
 - começam com $ seguido pelo nome da variável, por exemplo, $minhaVariavel. 
 - Não devem começar com número, embora possam conter dígitos no meio ou fim do nome;
 - Não podem conter caracteres especiais ou espaços. A exceção é o underline;
 - São case sensitive;
 - Não podem usar palavras reservadas.

Como sugestão, os nomes de variáveis compostas, devem seguir o estilo camel case, iniciar cada palavra com maiúsculo, conforme exemplo:

$minhaVariavel = 'Foobar';

Para saber o tipo, tamanho e texto da variável basta usar,

var_dump(nome_variavel);

Tipos de variável:
 - texto: são delimitadas por aspas simples ou duplas. A diferença é que, no caso de aspas simples, as variáveis internas não são resolvidas. 

Algumas vezes, quando as variáveis armazenam objetos, é necessário apagá-la (ela deixa de existir, elimina da memória), antes de um novo uso. Para realizar isso basta,

unset(var1, var2, ..., varn);

Para identificar se uma variável existe, antes de imprimir o seu valor, basta usar a instrução isset($variavel).

if (isset($var)) ...

Concatenação
Para concatenar dois valores use o operador . (ponto). Por exemplo, 

$nomeCompleto = 'Paulo Arantes';
$dataNascimento = '01/01/1970';

Antes da versão 7, o PHP realizava conversões automáticas de tipo. Essa era uma feature ruim pois, caso usasse o operador + e tentasse realizar a soma do valor dessa variável com um número, o interpretador ignorava parte da string e utilizava o restante da informação fornecendo um número.

$nome = 'João 10';
$numero = 50;

echo $nome + $numero; // imprime 60
  

echo $nomeCompleto . " nasceu em " . $dataNascimento; // imprime Paulo Arantes nasceu em 01/01/1970

Comentários
Ajudam a documentar um programa e são ignorados pelo interpretador. Podem ser de 3 tipos:
 - # ou /: comentários de fim de linha;
 - /* */: comentários de múltiplas de linhas;


Existem oito tipos de dados primitivos divididos em três grupo no PHP. Os tipos básicos são: inteiro, string, ponto flutuante, boolean. Tipos compostos: array e objetos. Por último, os dados especiais que são o resource e null.

// tipos simples

$nome = "Luís";           // string
$site = 'www.uol.com.br'; // string

$ano = 2018;        // inteiro
$salario = 5500.99; // ponto flutuante
$bloqueado = false; // boleano

################################################

// tipos compostos

$frutas = array('abacaxi', 'laranja', 'manga'); // array
$nascimento = new Date(); // objeto

################################################

// tipos especiais
$arquivo = fopen('arquivo.txt', 'r'); // resource do tipo stream

$nulo = NULL;

O NULL, em uma comparação próxima é, por exemplo, o ambiente. Em um ambiente vazio, só temos o ar, que seria uma string vazia "". Já no espaço sideral, nem ar tem, o que seria o null. Null é a ausência de valores, já o vazio é que foi iniciado. Outro exemplo seria uma caixa de papelão vazia, ela existe e pode guardar algo, mas se não existir, então é nula. Quando se diz que uma variável é vazia, então o sistema já reserva um espaço para ela na memória.